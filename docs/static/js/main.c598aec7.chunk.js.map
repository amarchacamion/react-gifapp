{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","autoFocus","placeholder","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAmB5C,OACI,mCAEA,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,WAAS,EACTC,YAAY,cACZC,MAASX,EACTY,SAxBc,SAAET,GACxBU,QAAQC,IAAIX,EAAEY,OAAOJ,OACrBV,EAAcE,EAAEY,OAAOJ,e,+BCRlBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCHFO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAKGqB,EDpBwBK,CAAc1B,GAAhCa,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,2CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KACH,SAAAC,GAAG,OACC,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEZ7BgB,EAAe,WAAM,IAAD,EAGO7C,mBAAU,CAAC,cAHlB,mBAGtB8C,EAHsB,KAGV/C,EAHU,KAK7B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YChBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c598aec7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [ inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2){\r\n            setCategories( cats => [ inputValue,...cats ] )\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                autoFocus\r\n                placeholder=\"Buscar Gifs\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=4&api_key=0iEiEkSx44BwF6czeqHEuSdTat7qmbH4`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={ url } alt={ title }/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images,loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p>Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map( \r\n                        img => (\r\n                            <GifGridItem \r\n                                key= {img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [], \r\n        loading: true \r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n            \r\n    }, [category])\r\n\r\n    \r\n\r\n\r\n    return state\r\n\r\n}\r\n","import './index.css';\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n  \r\n    const [categories, setCategories] = useState( ['One Punch'] );\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n           \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )   \r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}